<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[流浪剑客]]></title>
  <link href="http://svenlu.github.io/atom.xml" rel="self"/>
  <link href="http://svenlu.github.io/"/>
  <updated>2014-07-30T23:26:08+08:00</updated>
  <id>http://svenlu.github.io/</id>
  <author>
    <name><![CDATA[Sven Lu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[/proc/sys/net/ipv4详解]]></title>
    <link href="http://svenlu.github.io/blog/2014/07/30/slash-proc-slash-sys-slash-net-slash-ipv4xiang-jie/"/>
    <updated>2014-07-30T22:54:00+08:00</updated>
    <id>http://svenlu.github.io/blog/2014/07/30/slash-proc-slash-sys-slash-net-slash-ipv4xiang-jie</id>
    <content type="html"><![CDATA[<h1>通过/proc/sys/net/ipv4优化Linux下网了性能</h1>

<h2>/proc/sys/net/ipv4/优化</h2>

<h3>1./proc/sys/net/ipv4/ip_forward</h3>

<p> 该文件表示是否打开IP转发
 0.禁止
 1.转发
 缺省设置:0</p>

<h3>2./proc/sys/net/ipv4/ip_default_ttl</h3>

<p> 该文件表示数据报的生存周期(Time To Live)，即最多经过多少路由器。
 缺省设置:64
 增加该值会降低系统的性能。</p>

<h3>3./proc/sys/net/ipv4/ip_no_pmtu_disc</h3>

<p> 该文件表示在全局范围内关闭路径MTU探测功能。
 缺省设置:0</p>

<h3>4./proc/sys/net/ipv4/route/min_pmtu</h3>

<p> 该文件表示最小路径MTU的大小。
 缺省设置:552</p>

<h3>5./proc/sys/net/ipv4/route/mtu_expires</h3>

<p> 该文件表示PMTU信息缓存多长时间(秒)
 缺省设置:600(秒)</p>

<h3>6./proc/sys/net/ipv4/route/min_adv_mss</h3>

<p> 该文件表示最小的MSS（Maximum Segment Size）大小，取决于第一跳得路由器MTU。
 缺省设置:256(bytes)</p>

<h2>IP Fragmentation</h2>

<h3>1./proc/sys/net/ipv4/ipfrag_low_thresh</h3>

<p> /proc/sys/net/ipv4/ipfrag_low_thresh 两个文件分别表示用于重组IP分段的内存分配最低值和最高值，一旦达到最高内存分配值，其他分段将被丢弃，直到达到最低内存分配值。
 缺省设置:196608（ipfrag_low_thresh）262144（ipfrage_high_thresh）</p>

<h3>2./proc/sys/net/ipv4/ipfrag_time</h3>

<p> 该文件表示一个IP分段在内存中保留多少秒
 缺省设置:30（秒）</p>

<h2>INET Peer Storage</h2>

<h3>1./proc/sys/net/ipv4/inet_peer_threshold</h3>

<p> INET 对端存储器某个合适值，当超过该阀值条目将被丢弃。该阀值同样决定生存时间以及废物收集通过的时间间隔。条目越多，存活期越低，GC间隔越短。
 缺省设置:65664</p>

<h3>2./proc/sys/net/ipv4/inet_peer_minttl</h3>

<p> 条目的最低存活期。在重组端必须要有足够的碎片(fragment)存活期。这个最低存活期必须保证缓冲池容积是否少于inet_peer_threshold。该值以jiffies为单位测量。
 缺省设置：120</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[高负载系统，网络参数调整]]></title>
    <link href="http://svenlu.github.io/blog/2014/07/21/gao-fu-zai-xi-tong-%2Cwang-luo-can-shu-diao-zheng/"/>
    <updated>2014-07-21T19:53:00+08:00</updated>
    <id>http://svenlu.github.io/blog/2014/07/21/gao-fu-zai-xi-tong-,wang-luo-can-shu-diao-zheng</id>
    <content type="html"><![CDATA[<p>调整/etc/sysctl.conf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim /etc/sysctl.conf
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  1. net.ipv4.tcp_syncookies <span class="o">=</span> 1
</span></code></pre></td></tr></table></div></figure>


<p>表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  2. net.ipv4.tcp_tw_reuse <span class="o">=</span> 1
</span></code></pre></td></tr></table></div></figure>


<p>表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  3. net.ipv4.tcp_tw_recycle <span class="o">=</span> 1
</span></code></pre></td></tr></table></div></figure>


<p>表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  4. net.ipv4.tcp_fin_timeout <span class="o">=</span> 30
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  5. net.ipv4.tcp_keepalive_time <span class="o">=</span> 1200
</span></code></pre></td></tr></table></div></figure>


<p>表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  6. net.ipv4.ip_local_port_range <span class="o">=</span> 1024 65000
</span></code></pre></td></tr></table></div></figure>


<p>表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为1024到65000。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  7. net.ipv4.tcp_max_syn_backlog <span class="o">=</span> 8192
</span></code></pre></td></tr></table></div></figure>


<p>表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。</p>

<p>如果高负载系统使用了netfilter/iptables，调整以下参数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  8. net.ipv4.ip_conntrack_max <span class="o">=</span> 655360
</span></code></pre></td></tr></table></div></figure>


<p>在内核内存中netfilter可以同时处理的“任务”（连接跟踪条目）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  9. net.ipv4.netfilter.ip_conntrack_tcp_timeout_established <span class="o">=</span> 180
</span></code></pre></td></tr></table></div></figure>


<p>跟踪的连接超时结束时间 。</p>

<p>然后执行/sbin/sysctl -p让参数生效</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/sbin/sysctl -p
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
